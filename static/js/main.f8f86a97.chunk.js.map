{"version":3,"sources":["Airline.js","Posts.js","App.js","reportWebVitals.js","index.js"],"names":["Airline","this","props","airline","className","src","logo","alt","id","name","country","head_quaters","established","Component","Posts","post","map","trips","_id","App","fetchData","postStart","a","URL","fetch","then","response","json","setState","posts","state","data","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","newfetch","postPerFetch","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mTAEqBA,E,4JACjB,WAEI,OAEI,gCACIC,KAAKC,MAAMC,SACZ,oBAAIC,UAAU,iBAAd,6BAED,qBACEC,IAAKJ,KAAKC,MAAMC,QAAQG,KACxBF,UAAU,gBACVG,IAAKN,KAAKC,MAAMC,QAAQK,KAEzBP,KAAKC,MAAMC,QAAQM,MACpB,wCACQ,sBAAML,UAAU,UAAhB,SAA2BH,KAAKC,MAAMC,QAAQM,UAErDR,KAAKC,MAAMC,QAAQO,SACpB,2CACW,sBAAMN,UAAU,UAAhB,SAA2BH,KAAKC,MAAMC,QAAQO,aAExDT,KAAKC,MAAMC,QAAQQ,cACpB,yCACU,IACR,sBAAMP,UAAU,UAAhB,SAA2BH,KAAKC,MAAMC,QAAQQ,kBAG/CV,KAAKC,MAAMC,QAAQS,aACpB,wCACS,IACP,sBAAMR,UAAU,UAAhB,SAA2BH,KAAKC,MAAMC,QAAQS,wB,GA/BzBC,aC4BtBC,G,kKAxBb,WACE,OACE,qBAAKV,UAAU,OAAf,SACGH,KAAKC,MAAMa,KAAKC,KAAI,SAACD,GACpB,OACE,sBAAoBX,UAAU,OAA9B,UACE,oBAAIA,UAAU,iBAAd,gCACA,wCACQ,sBAAMA,UAAU,UAAhB,SAA2BW,EAAKN,UAExC,yCACS,sBAAML,UAAU,UAAhB,SAA2BW,EAAKE,WAEzC,uBAEA,cAAC,EAAD,CAASd,QAASY,EAAKZ,YAVfY,EAAKG,c,GAPPL,cCwDLM,E,kDArDb,aAAc,IAAD,8BACX,gBAkBFC,UAnBa,uCAmBH,WAAMC,GAAN,eAAAC,EAAA,6DAEAC,EAFA,4DAEyDF,EAFzD,qBAGAG,MAAMD,GAAKE,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAAQF,MAAK,SAAAC,GAEpD,EAAKE,SAAS,CACZC,MAAM,GAAD,mBAAK,EAAKC,MAAMD,OAAhB,YAAyBH,EAASK,YANrC,2CAnBG,wDAgCbC,aAAa,WACX,GAAGC,OAAOC,YAAcC,SAASC,gBAAgBC,YAC3CF,SAASC,gBAAgBE,aAAa,CAE1C,IAAIC,EAAS,EAAKT,MAAMU,aACxBD,GAAU,EACV,EAAKX,SAAS,CAACY,aAAaD,IAC5B,EAAKnB,UAAU,EAAKU,MAAMU,gBArC5B,EAAKV,MAAM,CACTU,aAAa,EACbX,MAAM,IAJG,E,qDAQb,WACE5B,KAAKmB,UAAUnB,KAAK6B,MAAMU,cAC1BP,OAAOQ,iBAAiB,SAASxC,KAAK+B,gB,kCAIxC,WACEC,OAAOS,oBAAoB,SAASzC,KAAK+B,gB,oBA2B3C,WACE,OACE,gCACA,oBAAI5B,UAAU,aAAd,6CACE,cAAC,EAAD,CAAOW,KAAMd,KAAK6B,MAAMD,e,GAhDdhB,aCOH8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BX,M","file":"static/js/main.f8f86a97.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Airline extends Component {\n    render() {\n        // console.log(this.props.airline);\n        return (\n          \n            <div>\n              { this.props.airline &&\n               <h3 className=\"details_header\">Airline Details</h3>\n              }\n              <img\n                src={this.props.airline.logo}\n                className=\"details_right\"\n                alt={this.props.airline.id}\n              />\n             { this.props.airline.name &&\n              <h4>\n                Name: <span className=\"details\">{this.props.airline.name}</span>\n              </h4> }\n              {this.props.airline.country &&\n              <h4>\n                Country: <span className=\"details\">{this.props.airline.country}</span>\n              </h4> }\n              {this.props.airline.head_quaters &&\n              <h4>\n                Origin:{\" \"}\n                <span className=\"details\">{this.props.airline.head_quaters  }</span>\n              </h4>\n              }\n              {this.props.airline.established &&\n              <h4>\n                Since:{\" \"}\n                <span className=\"details\">{this.props.airline.established}</span>\n              </h4> \n              }\n            </div>\n          \n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport Airline from \"./Airline\";\nimport \"./Posts.css\";\n\nclass Posts extends Component {\n \n  render() {\n    return (\n      <div className=\"grid\">\n        {this.props.post.map((post) => {\n          return (\n            <div key={post._id} className=\"item\">\n              <h3 className=\"details_header\">Passengers Details</h3>\n              <h4>\n                Name: <span className=\"details\">{post.name}</span>\n              </h4>\n              <h4>\n                Trips: <span className=\"details\">{post.trips}</span>\n              </h4>\n              <hr />\n              \n              <Airline airline={post.airline}/>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Posts;\n","\nimport './App.css';\nimport React, { Component } from 'react';\nimport Posts from \"./Posts\"; \n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state={\n      postPerFetch:0,\n      posts:[]\n    }\n  }\n  // to initally fetch the data\n  componentDidMount(){\n    this.fetchData(this.state.postPerFetch);\n    window.addEventListener(\"scroll\",this.handleScroll);\n  }\n\n  //to remove the eventlistner\n  componentWillUnmount(){\n    window.removeEventListener(\"scroll\",this.handleScroll)\n  }\n\n  //fetch Data from the Api\n  fetchData=async(postStart)=>{\n  \n      const URL=`https://api.instantwebtools.net/v1/passenger?page=${postStart}&size=10`;\n      await fetch(URL).then(response=>response.json()).then(response=>{\n        //  console.log(\"response\",response.data.length)\n        this.setState({\n          posts:[...this.state.posts,...response.data]\n        })\n      })\n     \n  }\n\n  // to check whether the scrollbar has reach the end of the screen\n  handleScroll=()=>{\n    if(window.innerHeight + document.documentElement.scrollTop\n      === document.documentElement.offsetHeight){\n        // console.log(\"handleScroll\")\n      let newfetch=this.state.postPerFetch;\n      newfetch+=1;\n      this.setState({postPerFetch:newfetch})\n      this.fetchData(this.state.postPerFetch);\n    }\n  }\n  render() {\n    return (\n      <div>\n      <h1 className=\"app_header\"> Passengers and Airline Details</h1>\n        <Posts post={this.state.posts}/>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}